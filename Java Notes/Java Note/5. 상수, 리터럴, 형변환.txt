1. 상수 (constant)
    1) 상수는 변하지 않는 수 ex) PIE(원주율)
    2) 리터럴 (상수), final 상수
    3) 상수를 사용하면 변하지 않는 값을 반복하여 사용할 때 의미가 있음. 혹, 변하더라도 선언한 부분만 변경하면 되므로 여러부분을 수정할 필요가 없음.
    
2. 리터럴 (literal)
    1) 프로그램에서 사용하는 숫자, 문자, 논리 값을 뜻함. 지금까지 변수에 대입하던 모든 숫자, 문자, 논리 값들이 리터럴이다.
        - 정수 리터럴은 int로 저장됨.
            - 정수의 범위가 넘어가는 경우는 L, l 식별자를 써야한다.
        - 실수 리터럴은 double로 저장됨.
            - float으로 사용하는 경우는 F, f 식별자를 써야한다.
        - 문자 리터럴은 char로 저장됨.
        - 놀리 리터럴은 boolean으로 저장됨.
    2) 리터럴은 프로그램이 시작할 때 특정 메모리 공간인 상수풀(constant pool)에 자동으로 로딩 되어 있음.

3. final 상수
    1) 프로그래머가 임의로 만들 수 있음.
    2) 대문자를 이용해서 만듦.
        - _, snake notation로 단어를 구분해 줌.
    3) final 상수는 변수처럼 값을 대입하여 처음 값을 정하게 되지만 이후에는 다른 값을 대입받아 바꿀 수 없다.
    4) final의 의미는 '이 값이 최종이다'

4. 형변환 (Type Conversion)
    1) 서로 다른 자료형 간에 연산등의 수행을 위해 하나의 자료형으로 통일하는 것
       
       주최
    2) 컴파일러(가 자동으로)       자동 형변환     묵시적(암묵적) 형변환
    3) 프로그래머(가 직접)         강제 형변환     명시적 형변환

    4) 연산시 형변환 일어남.
        - 두 피연산자 자료형이 일치해야 연산 진행함.
    5) 규칙
        - 첫째, 바이트의 크기가 작은 자료형에서 큰 자료형으로 형변환이 자동으로 일어남.
        - 둘째, 덜 정밀한 자료형에서 더 정밀한 자료형으로 형변환이 자동으로 일어남. (정수형 → 실수형)