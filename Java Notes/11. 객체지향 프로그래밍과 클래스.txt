1. 객체와 객체 지향 프로그래밍(Object Oriented Programming, OOP)
    1) 객체 (Object)
        - 구체적 데이터의 단위 (물리적인 객체)
            - 개, 고양이, 호랑이, 학생, 회원, 소나타 ...
        - 추상적 데이터의 단위 (개념적인 객체) 
            - 동물, 주문, 배송, 자동차 ...
    2) 절차 지향 프로그래밍 & 객체 지향 프로그래밍
        - 절차 지향 프로그래밍
            - 시간이나 사건의 흐름에 따른 프로그래밍
                - 일어난다 → 씻는다 → 밥을 먹는다 → 버스를 탄다 → 요금 지불한다 → 학원 도착한다. (흐름)
        - 객체 지향 프로그래밍
            - 객체를 정의(클래스로 구현)
            - 각 객체가 제공하는 기능들을 구현
            - 각 객체가 제공하는 기능들 간의 메시지 전달을 통해 객체간의 협력을 구현

                    (먹는다)
            학생       ↔      밥

       (탄다) ↕       ↘ (간다)   

            버스             학원 
    3) 객체 예
        - 온라인 쇼핑몰에 회원 로그인을 하고 여러 판매자가 판매하고 있는 제품 중 하나를 골라 주문을 한다.
        - 아침에 학원에 가는 길에 별다방에 들려서 아아를 주문했다.
        - 성적확인을 위해 학사 관리 시스템에 로그인하여 수강 한 과목들의 성적을 확인했다.

2. 클래스
    1) 객체와 관련된 데이터와 처리 동작을 한데 모은 코드 뭉치
    2) 어느 정도 특징적인 데이터와 동작으로 추려낼 필요가 있음.
    3) 추려내는 과정 → 추상화(Abstraction), 일반화라고 부름
        - 객체
                                                                (추상화된)클래스
            탈것        이륜            자전거, 오토바이            Bike
                        자동차          승용차, 버스, 트럭          Car
                        운송수단        자동차, 배, 비행기          Vehicle
    4) 명사적인 특징을 뽑아내는 추상화 과정 → 멤버 변수(필드,Field) 추출
       동사적인 특징을 뽑아내는 추상화 과정 → 멤버 함수(메서드, Method) 추출